name: Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '18.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 'Resolve Project Dependencies Using Npm'
      shell: bash
      run: |
        npm ci
        npm run build --if-present
        npm run test --if-present

    - name: 'Upload build artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          node_modules/
          host.json
          package.json
          package-lock.json
          azure.yaml
          infra/
          local.settings.json.example
          .funcignore

  deploy-dev:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: development
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: 'Download build artifacts'
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Install Azure Developer CLI'
      uses: azure/setup-azd@v1.0.0

    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Deploy to Azure Functions (Development)'
      run: |
        azd auth login --client-id ${{ secrets.AZURE_CLIENT_ID }} --client-secret ${{ secrets.AZURE_CLIENT_SECRET }} --tenant-id ${{ secrets.AZURE_TENANT_ID }}
        azd env select dev
        azd deploy --no-prompt
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_LOCATION: ${{ vars.AZURE_LOCATION || 'centralus' }}

  deploy-prod:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: 'Download build artifacts'
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Install Azure Developer CLI'
      uses: azure/setup-azd@v1.0.0

    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Deploy to Azure Functions (Production)'
      run: |
        azd auth login --client-id ${{ secrets.AZURE_CLIENT_ID }} --client-secret ${{ secrets.AZURE_CLIENT_SECRET }} --tenant-id ${{ secrets.AZURE_TENANT_ID }}
        azd env select ukg-sync-prod
        azd deploy --no-prompt
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_LOCATION: ${{ vars.AZURE_LOCATION || 'centralus' }}
